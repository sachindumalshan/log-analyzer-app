version: '3.8'

services:
  # Log Ingestion Service
  service-ingestion:
    build:
      context: ../backend/service-ingestion
      dockerfile: ../../docker/Dockerfile.ingestion
    container_name: log-analyzer-ingestion
    ports:
      - "3001:3001"
    volumes:
      - shared-logs:/app/shared/logs
    environment:
      - NODE_ENV=production
      - PORT=3001
    restart: unless-stopped
    networks:
      - log-analyzer-network
    depends_on:
      - shared-volume-init
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ingestion.rule=Host(`ingestion.localhost`)"
      - "traefik.http.routers.ingestion.service=ingestion"
      - "traefik.http.services.ingestion.loadbalancer.server.port=3001"

  # Analytics Service
  service-analytics:
    build:
      context: ../backend/service-analytics
      dockerfile: ../../docker/Dockerfile.analytics
    container_name: log-analyzer-analytics
    ports:
      - "3000:3000"
    volumes:
      - shared-logs:/app/shared/logs
    environment:
      - NODE_ENV=production
      - PORT=3000
    restart: unless-stopped
    networks:
      - log-analyzer-network
    depends_on:
      - shared-volume-init
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.analytics.rule=Host(`analytics.localhost`)"
      - "traefik.http.routers.analytics.service=analytics"
      - "traefik.http.services.analytics.loadbalancer.server.port=3000"

  # Frontend Service
  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/Dockerfile.frontend
    container_name: log-analyzer-frontend
    ports:
      - "8080:80"
    restart: unless-stopped
    networks:
      - log-analyzer-network
    depends_on:
      - service-ingestion
      - service-analytics
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

  # Shared volume initializer
  shared-volume-init:
    image: busybox
    container_name: log-analyzer-volume-init
    volumes:
      - shared-logs:/shared/logs
    command: >
      sh -c "
        mkdir -p /shared/logs &&
        touch /shared/logs/logs.jsonl &&
        chmod 666 /shared/logs/logs.jsonl &&
        echo 'Shared volume initialized'
      "

  # Optional: Reverse Proxy (Traefik)
  traefik:
    image: traefik:v2.10
    container_name: log-analyzer-traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"  # Traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - log-analyzer-network
    restart: unless-stopped
    profiles:
      - traefik

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: log-analyzer-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - log-analyzer-network
    restart: unless-stopped
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: log-analyzer-grafana
    ports:
      - "3003:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - log-analyzer-network
    restart: unless-stopped
    profiles:
      - monitoring

volumes:
  shared-logs:
    driver: local
  grafana-data:
    driver: local

networks:
  log-analyzer-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
